name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_DB: video_automation_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run Frontend Linting
      working-directory: ./frontend
      run: npm run lint

    - name: Run Backend Linting
      working-directory: ./backend
      run: npm run lint

    - name: Run Frontend Type Check
      working-directory: ./frontend
      run: npm run build

    - name: Run Backend Type Check
      working-directory: ./backend
      run: npm run build

    - name: Run Backend Tests
      working-directory: ./backend
      run: npm test
      env:
        NODE_ENV: test
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_DB: video_automation_test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres

    - name: Run Frontend Tests
      working-directory: ./frontend
      run: npm test
      env:
        NODE_ENV: test

  docker:
    needs: test-and-build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Backend
      uses: docker/build-push-action@v5
      with:
        context: .
        file: docker/production/backend.Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/video-automation-backend:latest

    - name: Build and push Frontend
      uses: docker/build-push-action@v5
      with:
        context: .
        file: docker/production/frontend.Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/video-automation-frontend:latest
